=LET(
    solved_cube,            "AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXX",
    neighbor,               LAMBDA(i,
                                IFS(
                                    i =  2, 26,
                                    i =  4, 18,
                                    i =  6, 10,
                                    i =  8, 34,
                                    i = 10,  6,
                                    i = 12, 24,
                                    i = 14, 42,
                                    i = 16, 36,
                                    i = 18,  4,
                                    i = 20, 32,
                                    i = 22, 44,
                                    i = 24, 12,
                                    i = 26,  2,
                                    i = 28, 40,
                                    i = 30, 46,
                                    i = 32, 20,
                                    i = 34,  8,
                                    i = 36, 16,
                                    i = 38, 48,
                                    i = 40, 28,
                                    i = 42, 14,
                                    i = 44, 22,
                                    i = 46, 30,
                                    i = 48, 38
                                )
                            ),
    apply_commutator,       LAMBDA(rc, target1, target2,
                                LET(
                                    c_idx,           1 + FIND("C", solved_cube),
                                    c_neighbor_idx,  neighbor(c_idx),
                                    t1_idx,          1 + FIND(target1, solved_cube),
                                    t1_neighbor_idx, neighbor(t1_idx),
                                    t2_idx,          1 + FIND(target2, solved_cube),
                                    t2_neighbor_idx, neighbor(t2_idx),
                                    REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(
                                        rc,
                                        t1_idx,          1, MID(rc, c_idx,           1)),
                                        t1_neighbor_idx, 1, MID(rc, c_neighbor_idx,  1)),
                                        t2_idx,          1, MID(rc, t1_idx,          1)),
                                        t2_neighbor_idx, 1, MID(rc, t1_neighbor_idx, 1)),
                                        c_idx,           1, MID(rc, t2_idx,          1)),
                                        c_neighbor_idx,  1, MID(rc, t2_neighbor_idx, 1))
                                )
                            ),
    apply_flip,             LAMBDA(rc, target,
                                LET(
                                    t_idx,          1 + FIND(target, solved_cube),
                                    t_neighbor_idx, neighbor(t_idx),
                                    REPLACE(REPLACE(
                                        rc,
                                        t_neighbor_idx, 1, MID(rc, t_idx,          1)),
                                        t_idx,          1, MID(rc, t_neighbor_idx, 1))
                                )
                            ),
    expected_permutation,   LAMBDA(rc, target1, target2,
                                LET(
                                    t1_idx,   1 + FIND(target1, solved_cube),
                                    t2_idx,   1 + FIND(target2, solved_cube),
                                    IFS(
                                        neighbor(t1_idx) = t2_idx, apply_flip(apply_flip(rc, "C"), target1),
                                        TRUE,                      apply_commutator(rc, target1, target2)
                                    )
                                )
                            ),
    rearrange_cube,         LAMBDA(rc, indices,
                                JOIN("", MAP(indices, LAMBDA(i, MID(rc, i, 1))))
                            ),
    apply_move,             LAMBDA(rc, move,
                                IFS(
                                    move = "U" , rearrange_cube(rc, { 7, 8, 1, 2, 3, 4, 5, 6,17,18,19,12,13,14,15,16,25,26,27,20,21,22,23,24,33,34,35,28,29,30,31,32, 9,10,11,36,37,38,39,40,41,42,43,44,45,46,47,48}),
                                    move = "U2", rearrange_cube(rc, { 5, 6, 7, 8, 1, 2, 3, 4,25,26,27,12,13,14,15,16,33,34,35,20,21,22,23,24, 9,10,11,28,29,30,31,32,17,18,19,36,37,38,39,40,41,42,43,44,45,46,47,48}),
                                    move = "U'", rearrange_cube(rc, { 3, 4, 5, 6, 7, 8, 1, 2,33,34,35,12,13,14,15,16, 9,10,11,20,21,22,23,24,17,18,19,28,29,30,31,32,25,26,27,36,37,38,39,40,41,42,43,44,45,46,47,48}),
                                    move = "u" , rearrange_cube(rc, { 7, 8, 1, 2, 3, 4, 5, 6,17,18,19,20,13,14,15,24,25,26,27,28,21,22,23,32,33,34,35,36,29,30,31,40, 9,10,11,12,37,38,39,16,41,42,43,44,45,46,47,48}),
                                    move = "u2", rearrange_cube(rc, { 5, 6, 7, 8, 1, 2, 3, 4,25,26,27,28,13,14,15,32,33,34,35,36,21,22,23,40, 9,10,11,12,29,30,31,16,17,18,19,20,37,38,39,24,41,42,43,44,45,46,47,48}),
                                    move = "u'", rearrange_cube(rc, { 3, 4, 5, 6, 7, 8, 1, 2,33,34,35,36,13,14,15,40, 9,10,11,12,21,22,23,16,17,18,19,20,29,30,31,24,25,26,27,28,37,38,39,32,41,42,43,44,45,46,47,48}),
                                    move = "F" , rearrange_cube(rc, { 1, 2, 3, 4,35,36,37, 8,15,16, 9,10,11,12,13,14, 7,18,19,20,21,22, 5, 6,25,26,27,28,29,30,31,32,33,34,41,42,43,38,39,40,23,24,17,44,45,46,47,48}),
                                    move = "F2", rearrange_cube(rc, { 1, 2, 3, 4,41,42,43, 8,13,14,15,16, 9,10,11,12,37,18,19,20,21,22,35,36,25,26,27,28,29,30,31,32,33,34,23,24,17,38,39,40, 5, 6, 7,44,45,46,47,48}),
                                    move = "F'", rearrange_cube(rc, { 1, 2, 3, 4,23,24,17, 8,11,12,13,14,15,16, 9,10,43,18,19,20,21,22,41,42,25,26,27,28,29,30,31,32,33,34, 5, 6, 7,38,39,40,35,36,37,44,45,46,47,48}),
                                    move = "f" , rearrange_cube(rc, { 1, 2, 3,34,35,36,37,38,15,16, 9,10,11,12,13,14, 7, 8,19,20,21, 4, 5, 6,25,26,27,28,29,30,31,32,33,48,41,42,43,44,39,40,23,24,17,18,45,46,47,22}),
                                    move = "f2", rearrange_cube(rc, { 1, 2, 3,48,41,42,43,44,13,14,15,16, 9,10,11,12,37,38,19,20,21,34,35,36,25,26,27,28,29,30,31,32,33,22,23,24,17,18,39,40, 5, 6, 7, 8,45,46,47, 4}),
                                    move = "f'", rearrange_cube(rc, { 1, 2, 3,22,23,24,17,18,11,12,13,14,15,16, 9,10,43,44,19,20,21,48,41,42,25,26,27,28,29,30,31,32,33, 4, 5, 6, 7, 8,39,40,35,36,37,38,45,46,47,34}),
                                    move = "R" , rearrange_cube(rc, { 1, 2,11,12,13, 6, 7, 8, 9,10,43,44,45,14,15,16,23,24,17,18,19,20,21,22, 5,26,27,28,29,30, 3, 4,33,34,35,36,37,38,39,40,41,42,31,32,25,46,47,48}),
                                    move = "R2", rearrange_cube(rc, { 1, 2,43,44,45, 6, 7, 8, 9,10,31,32,25,14,15,16,21,22,23,24,17,18,19,20,13,26,27,28,29,30,11,12,33,34,35,36,37,38,39,40,41,42, 3, 4, 5,46,47,48}),
                                    move = "R'", rearrange_cube(rc, { 1, 2,31,32,25, 6, 7, 8, 9,10, 3, 4, 5,14,15,16,19,20,21,22,23,24,17,18,45,26,27,28,29,30,43,44,33,34,35,36,37,38,39,40,41,42,11,12,13,46,47,48}),
                                    move = "r" , rearrange_cube(rc, { 1,10,11,12,13,14, 7, 8, 9,42,43,44,45,46,15,16,23,24,17,18,19,20,21,22, 5, 6,27,28,29, 2, 3, 4,33,34,35,36,37,38,39,40,41,30,31,32,25,26,47,48}),
                                    move = "r2", rearrange_cube(rc, { 1,42,43,44,45,46, 7, 8, 9,30,31,32,25,26,15,16,21,22,23,24,17,18,19,20,13,14,27,28,29,10,11,12,33,34,35,36,37,38,39,40,41, 2, 3, 4, 5, 6,47,48}),
                                    move = "r'", rearrange_cube(rc, { 1,30,31,32,25,26, 7, 8, 9, 2, 3, 4, 5, 6,15,16,19,20,21,22,23,24,17,18,45,46,27,28,29,42,43,44,33,34,35,36,37,38,39,40,41,10,11,12,13,14,47,48}),
                                    move = "B" , rearrange_cube(rc, {19,20,21, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,45,46,47,22,23,24,31,32,25,26,27,28,29,30, 3,34,35,36,37,38, 1, 2,41,42,43,44,39,40,33,48}),
                                    move = "B2", rearrange_cube(rc, {45,46,47, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,39,40,33,22,23,24,29,30,31,32,25,26,27,28,21,34,35,36,37,38,19,20,41,42,43,44, 1, 2, 3,48}),
                                    move = "B'", rearrange_cube(rc, {39,40,33, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18, 1, 2, 3,22,23,24,27,28,29,30,31,32,25,26,47,34,35,36,37,38,45,46,41,42,43,44,19,20,21,48}),
                                    move = "b" , rearrange_cube(rc, {19,20,21,22, 5, 6, 7,18, 9,10,11,12,13,14,15,16,17,44,45,46,47,48,23,24,31,32,25,26,27,28,29,30, 3, 4,35,36,37, 8, 1, 2,41,42,43,38,39,40,33,34}),
                                    move = "b2", rearrange_cube(rc, {45,46,47,48, 5, 6, 7,44, 9,10,11,12,13,14,15,16,17,38,39,40,33,34,23,24,29,30,31,32,25,26,27,28,21,22,35,36,37,18,19,20,41,42,43, 8, 1, 2, 3, 4}),
                                    move = "b'", rearrange_cube(rc, {39,40,33,34, 5, 6, 7,38, 9,10,11,12,13,14,15,16,17, 8, 1, 2, 3, 4,23,24,27,28,29,30,31,32,25,26,47,48,35,36,37,44,45,46,41,42,43,18,19,20,21,22}),
                                    move = "L" , rearrange_cube(rc, {29, 2, 3, 4, 5, 6,27,28, 1,10,11,12,13,14, 7, 8,17,18,19,20,21,22,23,24,25,26,47,48,41,30,31,32,39,40,33,34,35,36,37,38, 9,42,43,44,45,46,15,16}),
                                    move = "L2", rearrange_cube(rc, {41, 2, 3, 4, 5, 6,47,48,29,10,11,12,13,14,27,28,17,18,19,20,21,22,23,24,25,26,15,16, 9,30,31,32,37,38,39,40,33,34,35,36, 1,42,43,44,45,46, 7, 8}),
                                    move = "L'", rearrange_cube(rc, { 9, 2, 3, 4, 5, 6,15,16,41,10,11,12,13,14,47,48,17,18,19,20,21,22,23,24,25,26, 7, 8, 1,30,31,32,35,36,37,38,39,40,33,34,29,42,43,44,45,46,27,28}),
                                    move = "l" , rearrange_cube(rc, {29,30, 3, 4, 5,26,27,28, 1, 2,11,12,13, 6, 7, 8,17,18,19,20,21,22,23,24,25,46,47,48,41,42,31,32,39,40,33,34,35,36,37,38, 9,10,43,44,45,14,15,16}),
                                    move = "l2", rearrange_cube(rc, {41,42, 3, 4, 5,46,47,48,29,30,11,12,13,26,27,28,17,18,19,20,21,22,23,24,25,14,15,16, 9,10,31,32,37,38,39,40,33,34,35,36, 1, 2,43,44,45, 6, 7, 8}),
                                    move = "l'", rearrange_cube(rc, { 9,10, 3, 4, 5,14,15,16,41,42,11,12,13,46,47,48,17,18,19,20,21,22,23,24,25, 6, 7, 8, 1, 2,31,32,35,36,37,38,39,40,33,34,29,30,43,44,45,26,27,28}),
                                    move = "D" , rearrange_cube(rc, { 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,37,38,39,16,17,18,19,20,13,14,15,24,25,26,27,28,21,22,23,32,33,34,35,36,29,30,31,40,47,48,41,42,43,44,45,46}),
                                    move = "D2", rearrange_cube(rc, { 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,29,30,31,16,17,18,19,20,37,38,39,24,25,26,27,28,13,14,15,32,33,34,35,36,21,22,23,40,45,46,47,48,41,42,43,44}),
                                    move = "D'", rearrange_cube(rc, { 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,21,22,23,16,17,18,19,20,29,30,31,24,25,26,27,28,37,38,39,32,33,34,35,36,13,14,15,40,43,44,45,46,47,48,41,42}),
                                    move = "d" , rearrange_cube(rc, { 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,36,37,38,39,40,17,18,19,12,13,14,15,16,25,26,27,20,21,22,23,24,33,34,35,28,29,30,31,32,47,48,41,42,43,44,45,46}),
                                    move = "d2", rearrange_cube(rc, { 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,28,29,30,31,32,17,18,19,36,37,38,39,40,25,26,27,12,13,14,15,16,33,34,35,20,21,22,23,24,45,46,47,48,41,42,43,44}),
                                    move = "d'", rearrange_cube(rc, { 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,20,21,22,23,24,17,18,19,28,29,30,31,32,25,26,27,36,37,38,39,40,33,34,35,12,13,14,15,16,43,44,45,46,47,48,41,42}),
                                    move = "x" , rearrange_cube(rc, { 9,10,11,12,13,14,15,16,41,42,43,44,45,46,47,48,23,24,17,18,19,20,21,22, 5, 6, 7, 8, 1, 2, 3, 4,35,36,37,38,39,40,33,34,29,30,31,32,25,26,27,28}),
                                    move = "x2", rearrange_cube(rc, {41,42,43,44,45,46,47,48,29,30,31,32,25,26,27,28,21,22,23,24,17,18,19,20,13,14,15,16, 9,10,11,12,37,38,39,40,33,34,35,36, 1, 2, 3, 4, 5, 6, 7, 8}),
                                    move = "x'", rearrange_cube(rc, {29,30,31,32,25,26,27,28, 1, 2, 3, 4, 5, 6, 7, 8,19,20,21,22,23,24,17,18,45,46,47,48,41,42,43,44,39,40,33,34,35,36,37,38, 9,10,11,12,13,14,15,16}),
                                    move = "y" , rearrange_cube(rc, { 7, 8, 1, 2, 3, 4, 5, 6,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40, 9,10,11,12,13,14,15,16,43,44,45,46,47,48,41,42}),
                                    move = "y2", rearrange_cube(rc, { 5, 6, 7, 8, 1, 2, 3, 4,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40, 9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,45,46,47,48,41,42,43,44}),
                                    move = "y'", rearrange_cube(rc, { 3, 4, 5, 6, 7, 8, 1, 2,33,34,35,36,37,38,39,40, 9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,47,48,41,42,43,44,45,46}),
                                    move = "z" , rearrange_cube(rc, {39,40,33,34,35,36,37,38,15,16, 9,10,11,12,13,14, 7, 8, 1, 2, 3, 4, 5, 6,27,28,29,30,31,32,25,26,47,48,41,42,43,44,45,46,23,24,17,18,19,20,21,22}),
                                    move = "z2", rearrange_cube(rc, {45,46,47,48,41,42,43,44,13,14,15,16, 9,10,11,12,37,38,39,40,33,34,35,36,29,30,31,32,25,26,27,28,21,22,23,24,17,18,19,20, 5, 6, 7, 8, 1, 2, 3, 4}),
                                    move = "z'", rearrange_cube(rc, {19,20,21,22,23,24,17,18,11,12,13,14,15,16, 9,10,43,44,45,46,47,48,41,42,31,32,25,26,27,28,29,30, 3, 4, 5, 6, 7, 8, 1, 2,35,36,37,38,39,40,33,34}),
                                    move = "M" , rearrange_cube(rc, { 1,30, 3, 4, 5,26, 7, 8, 9, 2,11,12,13, 6,15,16,17,18,19,20,21,22,23,24,25,46,27,28,29,42,31,32,33,34,35,36,37,38,39,40,41,10,43,44,45,14,47,48}),
                                    move = "M2", rearrange_cube(rc, { 1,42, 3, 4, 5,46, 7, 8, 9,30,11,12,13,26,15,16,17,18,19,20,21,22,23,24,25,14,27,28,29,10,31,32,33,34,35,36,37,38,39,40,41, 2,43,44,45, 6,47,48}),
                                    move = "M'", rearrange_cube(rc, { 1,10, 3, 4, 5,14, 7, 8, 9,42,11,12,13,46,15,16,17,18,19,20,21,22,23,24,25, 6,27,28,29, 2,31,32,33,34,35,36,37,38,39,40,41,30,43,44,45,26,47,48}),
                                    move = "E" , rearrange_cube(rc, { 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,36,13,14,15,40,17,18,19,12,21,22,23,16,25,26,27,20,29,30,31,24,33,34,35,28,37,38,39,32,41,42,43,44,45,46,47,48}),
                                    move = "E2", rearrange_cube(rc, { 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,28,13,14,15,32,17,18,19,36,21,22,23,40,25,26,27,12,29,30,31,16,33,34,35,20,37,38,39,24,41,42,43,44,45,46,47,48}),
                                    move = "E'", rearrange_cube(rc, { 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,20,13,14,15,24,17,18,19,28,21,22,23,32,25,26,27,36,29,30,31,40,33,34,35,12,37,38,39,16,41,42,43,44,45,46,47,48}),
                                    move = "S" , rearrange_cube(rc, { 1, 2, 3,34, 5, 6, 7,38, 9,10,11,12,13,14,15,16,17, 8,19,20,21, 4,23,24,25,26,27,28,29,30,31,32,33,48,35,36,37,44,39,40,41,42,43,18,45,46,47,22}),
                                    move = "S2", rearrange_cube(rc, { 1, 2, 3,48, 5, 6, 7,44, 9,10,11,12,13,14,15,16,17,38,19,20,21,34,23,24,25,26,27,28,29,30,31,32,33,22,35,36,37,18,39,40,41,42,43, 8,45,46,47, 4}),
                                    move = "S'", rearrange_cube(rc, { 1, 2, 3,22, 5, 6, 7,18, 9,10,11,12,13,14,15,16,17,44,19,20,21,48,23,24,25,26,27,28,29,30,31,32,33, 4,35,36,37, 8,39,40,41,42,43,38,45,46,47,34})
                                )
                            ),
    apply_moveseq,          LAMBDA(rc, moves,
                                REDUCE(rc, SPLIT(moves, " "), LAMBDA(acc, x, apply_move(acc, x)))
                            ),
    invert_move,            LAMBDA(move,
                                IFS(
                                    REGEXMATCH(move, "[UuFfRrBbLlDdxyzMES]'"), LEFT(move, LEN(move) - 1),
                                    REGEXMATCH(move, "[UuFfRrBbLlDdxyzMES]2"), move,
                                    REGEXMATCH(move, "[UuFfRrBbLlDdxyzMES]"),  CONCAT(move, "'")
                                )
                            ),
    invert_moveseq,         LAMBDA(moves,
                                TRIM(REDUCE("", SPLIT(moves, " "), LAMBDA(acc, m, CONCATENATE(invert_move(m), " ", acc))))
                            ),
    moveseq_regex,          "[UuFfRrBbLlDdxyzMES'2 ]+",
    split_left,             LAMBDA(x, sep,
                                TRIM(LEFT(RIGHT(x, LEN(x) - 1), FIND(sep, x) - 2))
                            ),
    split_right,            LAMBDA(x, sep,
                                TRIM(RIGHT(LEFT(x, LEN(x) - 1), LEN(x) - 1 - FIND(sep, x)))
                            ),
    apply_alg,              LAMBDA(rc, alg, rec,
                                IFS(
                                    REGEXMATCH(alg, CONCATENATE("^", moveseq_regex, "$")),
                                    apply_moveseq(rc, alg),
                                    REGEXMATCH(alg, CONCATENATE("^\[", moveseq_regex, ",", moveseq_regex, "\]$")),
                                    LET(
                                        comm1, split_left(alg, ","),
                                        comm2, split_right(alg, ","),
                                        apply_moveseq(apply_moveseq(apply_moveseq(apply_moveseq(rc, comm1), comm2), invert_moveseq(comm1)), invert_moveseq(comm2))
                                    ),
                                    REGEXMATCH(alg, CONCATENATE("^\[", moveseq_regex, ":.*\]$")),
                                    LET(
                                        setup,     split_left(alg, ":"),
                                        inner_alg, split_right(alg, ":"),
                                        apply_moveseq(rec(apply_moveseq(rc, setup), inner_alg, rec), invert_moveseq(setup))
                                    ),
                                    TRUE,
                                    LET(
                                        moves, INDEX(Algorithms!$B$2:$B, MATCH(alg, Algorithms!$A$2:$A, 0)),
                                        apply_moveseq(rc, moves)
                                    )
                                )
                            ),
    alg,                    B2,
    target1,                $A2,
    target2,                B$1,
    IF(
        alg = "",
        "",
        apply_alg(solved_cube, alg, apply_alg) = expected_permutation(solved_cube, target1, target2)
    )
)
